[pytest]
# Pytest configuration for HexStrike testing framework

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.8

# Options that will be used by default
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Strict markers - fail on unknown markers
    --strict-markers
    # Strict config - fail on unknown config options
    --strict-config
    # Show warnings
    -W default
    # Coverage options (when pytest-cov is used)
    --cov=hexstrike_server
    --cov=hexstrike_mcp
    --cov=core
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    # Fail if coverage is below 80%
    --cov-fail-under=80
    # Don't display coverage warnings
    --no-cov-on-fail
    # Parallel execution (requires pytest-xdist)
    -n auto
    # Timeout for tests (requires pytest-timeout)
    --timeout=30
    # Show slowest tests
    --durations=10

# Markers for organizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, test component interactions)
    slow: Slow tests (can be skipped with -m "not slow")
    requires_tools: Tests that require external security tools
    requires_network: Tests that require network access
    visual: Tests for visual output components
    cache: Tests for caching functionality
    telemetry: Tests for telemetry collection
    security: Security-related tests
    api: API endpoint tests
    flask: Flask application tests
    subprocess: Tests involving subprocess execution

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/test_output.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Ignore warnings from third-party libraries
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Specific warnings we want to ignore
    ignore:.*imp module.*:DeprecationWarning
    ignore:.*collections\.abc.*:DeprecationWarning

# Directories to ignore during test collection
norecursedirs =
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    htmlcov
    .venv
    venv
    env
    hexstrike_env

# Console output style
console_output_style = progress

# Timeout configuration
timeout = 30
timeout_method = thread

# Collection configuration
# collect_ignore = ['setup.py']  # This option is deprecated, use norecursedirs instead

# Cache directory
cache_dir = .pytest_cache

# Doctest configuration (if using doctests)
doctest_optionflags = NORMALIZE_WHITESPACE ELLIPSIS

# Performance optimization
# Use last-failed first strategy for faster feedback
# Note: --lf and --ff can be used as command-line options
